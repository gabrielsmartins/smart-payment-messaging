apply plugin: 'java'
apply plugin: 'jacoco'

sourceCompatibility = '11'
targetCompatibility = '11'
compileJava.options.encoding = 'UTF-8'

repositories {
    jcenter()
    mavenCentral()
    maven {
        name "confluent"
        url "http://packages.confluent.io/maven/"
    }
}

buildscript {
    ext {
        springBootDependencyManagementPluginVersion = '1.0.9.RELEASE'
    }
    repositories {
        jcenter()
        mavenCentral()
        maven {
            name "gradle"
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            name "confluent"
            url "http://packages.confluent.io/maven/"
        }
    }
    dependencies {
        classpath group: 'io.spring.gradle', name: 'dependency-management-plugin', version: springBootDependencyManagementPluginVersion
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'

    sourceCompatibility = '11'
    targetCompatibility = '11'

    compileJava.options.encoding = 'UTF-8'

    repositories {
        jcenter()
        mavenCentral()
        maven {
            name "confluent"
            url "http://packages.confluent.io/maven/"
        }
    }

}

subprojects {
    apply plugin: 'io.spring.dependency-management'

    group = 'br.gabrielsmartins.smartpayment'
    version = '0.0.1-SNAPSHOT'

    ext {
        springBootVersion = '2.3.4.RELEASE'
        springCloudVersion = 'Hoxton.SR8'
        lombokVersion = '1.18.12'
        junitVersion = '5.6.2'
        junitPlatformVersion = '1.6.2'
        assertjVersion = '3.16.1'
        apacheCommons3Version = '3.9'
        mapStructVersion = '1.3.1.Final'
        mockitoVersion = '3.3.3'
        avroVersion = '1.10.1'
        confluentVersion = '6.0.1'
        awaitilityVersion = '4.0.3'
    }

    dependencies {

        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitVersion
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitVersion
        testImplementation group: 'org.junit.platform', name: 'junit-platform-launcher', version: junitPlatformVersion
        testImplementation group: 'org.junit.platform', name: 'junit-platform-engine', version: junitPlatformVersion
        testImplementation group: 'org.assertj', name: 'assertj-core', version: assertjVersion
        testImplementation group: 'org.mockito', name: 'mockito-core', version: mockitoVersion

        implementation group: 'org.projectlombok', name: 'lombok', version: lombokVersion
        testCompileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
        annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion
        testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion

        implementation group: 'org.apache.commons', name: 'commons-lang3', version: apacheCommons3Version

        implementation group: 'org.mapstruct', name: 'mapstruct', version: mapStructVersion
        annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: mapStructVersion

        implementation 'org.springframework.boot:spring-boot-starter'


        implementation 'org.springframework.boot:spring-boot-starter-validation'

        implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
        implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
            mavenBom("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
        }
    }

    test {
        useJUnitPlatform()
        finalizedBy(jacocoTestReport)
    }

    jacocoTestReport {
        reports {
            html.enabled = true
            xml.enabled = true
            csv.enabled = false
            html.destination file("${buildDir}/jacocoHtml")
        }
    }
}

jacoco {
    toolVersion = '0.8.5'
}

