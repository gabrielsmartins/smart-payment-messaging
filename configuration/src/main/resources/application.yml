server:
  port: 8080

spring:
  data:
    mongodb:
      database: orderdb
      #authentication-database: admin
      host: localhost
      port: 27017
      #password: root
      #username: password
  kafka:
    bootstrap-servers: 127.0.0.1:9092
    properties:
      request.timeout.ms: 20000
      retry.backoff.ms: 500
      schema.registry.url: http://localhost:8081
    consumer:
      group-id: smartpayment-orders
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      schema.registry.url: ${spring.kafka.properties.schema.registry.url}
      properties:
        specific.avro.reader: true
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      schema.registry.url: ${spring.kafka.properties.schema.registry.url}
  zipkin:
    base-url: http://localhost:9411
  sleuth:
    opentracing:
      enabled: true
    sampler:
      probability: 1.0
    trace-id128: true

topic:
  input:
    order-requested: order-requested
    order-validated: order-validated
  output:
    order-status-updated: order-status-updated

endpoint:
  notifications:
    url: http://localhost:8081/orders